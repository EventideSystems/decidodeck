---
version: 2
jobs:
  build:
    working_directory: ~/wicked_software
    docker:
      - image: circleci/ruby:2.6.2-stretch-node
        environment:
          PGHOST: localhost
          PGUSER: wicked_software
          RAILS_ENV: test
      - image: postgres:9.5
        environment:
          POSTGRES_USER: wicked_software
          POSTGRES_DB: wicked_software_test
          POSTGRES_PASSWORD: ""

    steps:
      # Install required libraries
      - run: sudo apt-get update && sudo apt-get -y install libgeos-dev libgeos++-dev libproj-dev
      
      - checkout

      - run:
          name: "Update Node.js and npm"
          command: |
            curl -sSL "https://nodejs.org/dist/v11.10.0/node-v11.10.0-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v11.10.0-linux-x64/bin/node
            curl https://www.npmjs.com/install.sh | sudo bash

      - run:
           name: Configure Bundler
           command: |
             echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
             source $BASH_ENV
             gem install bundler
             
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
