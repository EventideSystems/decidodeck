{
  "ignored_warnings": [
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "83202f402b26456d1aa5260494cf76671fd4e94bbb62a3c06020c863260d7350",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/reports/cross_workspace_percent_actual_by_focus_area_tabbed.rb",
      "line": 127,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"with raw_percent_actual_by_focus_area as (\\n  select\\n    workspaces.id as workspace_id,\\n    scorecards.id as scorecard_id,\\n    initiatives.id as initiative_id,\\n    focus_areas.name as focus_area_name,\\n    count(checklist_items.id) as total_characteristics,\\n    sum(case when checklist_items.status = 'actual' then 1 else 0 end) as actual_characteristics,\\n    round(sum(case when checklist_items.status = 'actual' then 1 else 0 end)::numeric / count(checklist_items.id)::numeric * 100.0, 2) as percent_actual\\n  from checklist_items\\n    inner join initiatives on checklist_items.initiative_id = initiatives.id\\n    inner join scorecards on initiatives.scorecard_id = scorecards.id\\n    inner join workspaces on scorecards.workspace_id = workspaces.id\\n    inner join characteristics on checklist_items.characteristic_id = characteristics.id\\n    inner join focus_areas on characteristics.focus_area_id = focus_areas.id\\n    inner join impact_card_data_models on scorecards.impact_card_data_model_id = impact_card_data_models.id\\n    where workspaces.id in (#{workspaces.pluck(:id).join(\",\")})\\n    and initiatives.deleted_at is null\\n    and scorecards.deleted_at is null\\n    and impact_card_data_models.name = 'Transition Card'\\n    and focus_areas.name = '#{focus_area_name}'\\n    group by workspaces.id, scorecards.id, initiatives.id, focus_areas.name\\n)\\n\\nselect distinct on (workspace_name, impact_card_name, initiative_name, focus_area_name)\\n  workspaces.name as workspace_name,\\n  scorecards.name as impact_card_name,\\n  initiatives.name as initiative_name,\\n  focus_areas.name as focus_area_name,\\n  raw_percent_actual_by_focus_area.total_characteristics,\\n  raw_percent_actual_by_focus_area.actual_characteristics,\\n  raw_percent_actual_by_focus_area.percent_actual\\nfrom raw_percent_actual_by_focus_area\\ninner join initiatives on raw_percent_actual_by_focus_area.initiative_id = initiatives.id\\ninner join scorecards on initiatives.scorecard_id = scorecards.id\\ninner join workspaces on scorecards.workspace_id = workspaces.id\\ninner join focus_areas on raw_percent_actual_by_focus_area.focus_area_name = focus_areas.name\\ninner join impact_card_data_models on scorecards.impact_card_data_model_id = impact_card_data_models.id\\norder by workspace_name, impact_card_name, initiative_name, focus_area_name\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reports::CrossWorkspacePercentActualByFocusAreaTabbed",
        "method": "generate_data"
      },
      "user_input": "workspaces.pluck(:id).join(\",\")",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "95f87b10a48671f96e0c5f467939b6ec97c1d07771b644449a8ebb5dc558794c",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/reports/scorecard_comments.rb",
      "line": 185,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"with comments_with_timestamp as (\\n  select\\n    characteristics.id as characteristic_id,\\n    initiatives.id as initiative_id,\\n    json_strip_nulls(\\n      json_agg(\\n        json_build_object(\\n          'comment', checklist_item_changes.comment,\\n          'date', checklist_item_changes.created_at\\n        )\\n      )\\n    ) AS comments,\\n    count(checklist_item_changes.comment) as comment_count\\n  from checklist_item_changes\\n  inner join checklist_items on checklist_items.id = checklist_item_changes.checklist_item_id\\n  inner join characteristics on characteristics.id = checklist_items.characteristic_id\\n  inner join initiatives on initiatives.id = checklist_items.initiative_id\\n  left join lateral (\\n    select\\n      distinct on (previous_changes.checklist_item_id)\\n      previous_changes.id,\\n      previous_changes.comment\\n    from checklist_item_changes previous_changes\\n      where previous_changes.checklist_item_id = checklist_item_changes.checklist_item_id\\n      and previous_changes.created_at < checklist_item_changes.created_at\\n      order by previous_changes.checklist_item_id, previous_changes.created_at desc\\n  ) previous_changes on true\\n  where checklist_item_changes.comment <> coalesce(previous_changes.comment, '')\\n  and checklist_item_changes.created_at <= '#{date}'\\n  and checklist_item_changes.ending_status = '#{status}'\\n  and initiatives.scorecard_id = #{scorecard.id}\\n  and (checklist_item_changes.created_at < initiatives.archived_on or initiatives.archived_on is null)\\n  group by characteristics.id, initiatives.id\\n),\\n\\ncharacteristics_ordered_by_position as (\\n  select\\n    characteristics.*\\n  from characteristics\\n  inner join focus_areas on focus_areas.id = characteristics.focus_area_id\\n  inner join focus_area_groups on focus_area_groups.id = focus_areas.focus_area_group_id\\n  inner join impact_card_data_models on impact_card_data_models.id = focus_area_groups.impact_card_data_model_id\\n  where impact_card_data_models.workspace_id = #{scorecard.workspace_id}\\n  order by focus_area_groups.position, focus_areas.position, characteristics.id\\n)\\n\\nselect\\n  characteristics.id as characteristic_id,\\n  json_strip_nulls(\\n    json_agg(\\n      json_build_object(\\n        'initiative_id', initiative_id,\\n        'comments', comments,\\n        'comment_count', comment_count\\n      )\\n    )\\n  ) as comments,\\n  count(initiative_id) as initiative_count\\nfrom characteristics\\ninner join comments_with_timestamp on comments_with_timestamp.characteristic_id = characteristics.id\\ngroup by characteristics.id\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reports::ScorecardComments",
        "method": "generate_data"
      },
      "user_input": "date",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "bb359411a6abbab81dcf8e7c00ca889aa532e8b9ad23c3f2f9d1f349d270461f",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/reports/cross_workspace_percent_actual.rb",
      "line": 104,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"with raw_percent_actual as (\\n  select\\n    workspaces.id as workspace_id,\\n    scorecards.id as scorecard_id,\\n    initiatives.id as initiative_id,\\n    count(checklist_items.id) as total_characteristics,\\n    sum(case when checklist_items.status = 'actual' then 1 else 0 end) as actual_characteristics,\\n    round(sum(case when checklist_items.status = 'actual' then 1 else 0 end)::numeric / count(checklist_items.id)::numeric * 100.0, 2) as percent_actual\\n  from checklist_items\\n    inner join initiatives on checklist_items.initiative_id = initiatives.id\\n    inner join scorecards on initiatives.scorecard_id = scorecards.id\\n    inner join workspaces on scorecards.workspace_id = workspaces.id\\n    inner join impact_card_data_models on scorecards.impact_card_data_model_id = impact_card_data_models.id\\n    where workspaces.id in (#{workspaces.pluck(:id).join(\",\")})\\n    and initiatives.deleted_at is null\\n    and scorecards.deleted_at is null\\n    and impact_card_data_models.name = 'Transition Card'\\n    group by workspaces.id, scorecards.id, initiatives.id\\n)\\n\\nselect\\n  workspaces.name as workspace_name,\\n  scorecards.name as impact_card_name,\\n  initiatives.name as initiative_name,\\n  raw_percent_actual.total_characteristics,\\n  raw_percent_actual.actual_characteristics,\\n  raw_percent_actual.percent_actual\\nfrom raw_percent_actual\\ninner join initiatives on raw_percent_actual.initiative_id = initiatives.id\\ninner join scorecards on initiatives.scorecard_id = scorecards.id\\ninner join workspaces on scorecards.workspace_id = workspaces.id\\ninner join impact_card_data_models on scorecards.impact_card_data_model_id = impact_card_data_models.id\\norder by workspace_name, impact_card_name, initiative_name\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reports::CrossWorkspacePercentActual",
        "method": "generate_data"
      },
      "user_input": "workspaces.pluck(:id).join(\",\")",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "cf1f50494e2d7e9a0a133a2f86fe34c4de6f951ff9c9ae39a4194a5bf5bc684b",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/reports/cross_workspace_percent_actual_by_focus_area.rb",
      "line": 110,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"with raw_percent_actual_by_focus_area as (\\n  select\\n    workspaces.id as workspace_id,\\n    scorecards.id as scorecard_id,\\n    initiatives.id as initiative_id,\\n    focus_areas.id as focus_area_id,\\n    count(checklist_items.id) as total_characteristics,\\n    sum(case when checklist_items.status = 'actual' then 1 else 0 end) as actual_characteristics,\\n    round(sum(case when checklist_items.status = 'actual' then 1 else 0 end)::numeric / count(checklist_items.id)::numeric * 100.0, 2) as percent_actual\\n  from checklist_items\\n    inner join initiatives on checklist_items.initiative_id = initiatives.id\\n    inner join scorecards on initiatives.scorecard_id = scorecards.id\\n    inner join workspaces on scorecards.workspace_id = workspaces.id\\n    inner join characteristics on checklist_items.characteristic_id = characteristics.id\\n    inner join focus_areas on characteristics.focus_area_id = focus_areas.id\\n    inner join impact_card_data_models on scorecards.impact_card_data_model_id = impact_card_data_models.id\\n    where workspaces.id in (#{workspaces.pluck(:id).join(\",\")})\\n    and initiatives.deleted_at is null\\n    and scorecards.deleted_at is null\\n    and impact_card_data_models.name = 'Transition Card'\\n    group by workspaces.id, scorecards.id, initiatives.id, focus_areas.id\\n)\\n\\nselect\\n  workspaces.name as workspace_name,\\n  scorecards.name as impact_card_name,\\n  scorecards.type as scorecard_type,\\n  initiatives.name as initiative_name,\\n  focus_areas.name as focus_area_name,\\n  raw_percent_actual_by_focus_area.total_characteristics,\\n  raw_percent_actual_by_focus_area.actual_characteristics,\\n  raw_percent_actual_by_focus_area.percent_actual\\nfrom raw_percent_actual_by_focus_area\\ninner join initiatives on raw_percent_actual_by_focus_area.initiative_id = initiatives.id\\ninner join scorecards on initiatives.scorecard_id = scorecards.id\\ninner join workspaces on scorecards.workspace_id = workspaces.id\\ninner join focus_areas on raw_percent_actual_by_focus_area.focus_area_id = focus_areas.id\\norder by workspace_name, impact_card_name, initiative_name, focus_areas.position\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reports::CrossWorkspacePercentActualByFocusArea",
        "method": "generate_data"
      },
      "user_input": "workspaces.pluck(:id).join(\",\")",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": ""
    }
  ],
  "brakeman_version": "7.0.0"
}
