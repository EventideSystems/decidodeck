<style>
  <%= render partial: 'labels/label', formats: :css, locals: { label: label } %>
</style>

<%= form_with(model: [:labels, label], html: { class: 'form-horizontal record-form border-b border-zinc-950/10 dark:border-white/10 pb-5' }) do |f| %>
  <div class="w-full mb-4">
    <div class="flex items-center justify-between py-4">
      <div class="flex items-center gap-6 w-1/3">
        <div class="flex-shrink-0 rounded-lg flex items-center justify-center <%= dom_id(label) %>" data-labels-target="previewColor">
          <p class="p-2 text-sm" data-labels-target="previewName"><%= label.name.presence || 'Preview' %></p>
        </div>
      </div>
    </div>
  </div>

  <div class="flex space-x-2">
    <div class="flex-1">
      <%= f.label :name, class: 'block text-xs font-medium text-gray-700' %>
      <%=
        f.text_field(
          :name,
          placeholder: 'Name',
          autofocus: true,
          data: { labels_target: 'nameField', action: 'input->labels#updatePreviewName' },
          class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 text-xs py-1'
        )
      %>
    </div>

    <div class="flex-1">
      <%= f.label :description, class: 'block text-xs font-medium text-gray-700' %>
      <%= f.text_field :description, placeholder: 'Description (optional)', class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 text-xs py-1' %>
    </div>

    <div class="flex-1">
      <%= f.label :color, class: 'block text-xs font-medium text-gray-700' %>
      <%=
        f.color_field(
          :color,
          data: { labels_target: 'colorField', action: 'input->labels#updatePreviewColor' },
          class: 'mt-1 block w-24 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 text-xs'
        )
      %>
    </div>

    <div class="space-x-2 mt-4">
      <%- save_disabled = (label.name.blank? || label.color.blank?) %>
      <%= link_to "Cancel", polymorphic_path([:labels, label.class]), class: LinksHelper::SECONDARY_CLASS %>
      <%=
        f.submit(
          "Save",
          data: { labels_target: 'submitButton' },
          class: "#{LinksHelper::PRIMARY_CLASS}#{ ' opacity-50 cursor-not-allowed' if save_disabled }",
          disabled: save_disabled
        )
      %>
    </div>
  </div>
<% end %>
